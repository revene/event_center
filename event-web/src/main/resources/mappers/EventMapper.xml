<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2018 安徽谊品弘科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.blanc.event.dao.EventDao">


    <resultMap id="EventResultMap" type="com.blanc.event.model.Event">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="app_code" jdbcType="VARCHAR" property="appCode"/>
        <result column="event_type" jdbcType="VARCHAR" property="eventType"/>
        <result column="biz_id" jdbcType="VARCHAR" property="bizId"/>
        <result column="request" jdbcType="VARCHAR" property="request"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="execute_size" jdbcType="INTEGER" property="executeSize"/>
        <result column="target_ip" jdbcType="VARCHAR" property="targetIp"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify"/>
        <result column="receive_chanel" jdbcType="VARCHAR" property="receiveChanel"/>
        <result column="execute_time" jdbcType="BIGINT" property="executeTime"/>
        <result column="data_index" jdbcType="BIGINT" property="dataIndex"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
    </resultMap>


    <sql id="cols_all">
     id, app_code, event_type, biz_id, request, `status`, execute_size, target_ip, gmt_create,
    gmt_modify, receive_chanel, execute_time,data_index,version
   </sql>

    <insert id="insertEvent" parameterType="com.blanc.event.model.Event">
      insert into event (app_code, event_type,biz_id, request, `status`,execute_size, target_ip, gmt_create,
      gmt_modify, receive_chanel, execute_time,version
      )
    values (#{appCode,jdbcType=VARCHAR}, #{eventType,jdbcType=VARCHAR},
      #{bizId,jdbcType=VARCHAR}, #{request,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{executeSize,jdbcType=INTEGER}, #{targetIp,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModify,jdbcType=TIMESTAMP}, #{receiveChanel,jdbcType=VARCHAR}, #{executeTime,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}
      )
  </insert>


    <select id="getEvent" resultMap="EventResultMap" parameterType="map">
        SELECT
        <include refid="cols_all"/>
        FROM
        event
        <where>
            <if test="appCode != null">
                AND app_code = #{appCode}
            </if>
            <if test="eventType != null">
                AND event_type = #{eventType}
            </if>
            <if test="bizId != null">
                AND biz_id = #{bizId}
            </if>
            <if test="version != null">
                AND version = #{version}
            </if>
        </where>

    </select>


    <select id="scanEvent" resultMap="EventResultMap" parameterType="map">
        SELECT
        <include refid="cols_all"/>
        FROM
        event
        <where>
            <if test="status != null">
                AND `status` = #{status}
            </if>
            <if test="startTime != null">
                AND  <![CDATA[ execute_time >=#{startTime}  ]]>
            </if>
            <if test="endTime != null">
                AND  <![CDATA[ execute_time < #{endTime}  ]]>
            </if>
        </where>
        order by id
        limit #{offset},#{limit}
    </select>
    <select id="listEvent" resultMap="EventResultMap" parameterType="com.blanc.event.model.EventQuery">
        SELECT
        <include refid="cols_all"/>
        FROM
        event
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>

            <if test="appCode != null">
                AND app_code = #{appCode}
            </if>

            <if test="eventType != null">
                AND event_type = #{eventType}
            </if>
            <if test="bizId != null">
                AND biz_id = #{bizId}
            </if>

        </where>
        <if test="start != null">
            order by gmt_create desc limit #{start},#{pageSize}
        </if>
    </select>


    <select id="countEvent" resultType="int" parameterType="com.blanc.event.model.EventQuery">
        SELECT count(id)
        FROM
        event
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>

            <if test="appCode != null">
                AND app_code = #{appCode}
            </if>

            <if test="eventType != null">
                AND event_type = #{eventType}
            </if>
            <if test="bizId != null">
                AND biz_id = #{bizId}
            </if>

        </where>
    </select>


    <update id="updateEvent" parameterType="com.blanc.event.model.Event">
        UPDATE event
        <trim prefix="set" suffixOverrides=",">
            <if test="status!=null">status=#{status},</if>
            <if test="executeTime!=null">execute_time=#{executeTime},</if>
            <if test="executeSize!=null">execute_size=#{executeSize},</if>
        </trim>
        WHERE id=#{id}
    </update>
</mapper>